name: Audio Service CD

on:
  push:
    branches: [ main, dev, 'quan/feature/be/cd' ]
    paths:
      - 'audio-service/**'
      - 'services/audio-service/**'
      - '.github/workflows/audio-service-cd.yml'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'services/audio-service/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./services/audio-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
                
      - name: Test uvicorn server launch
        working-directory: ./services/audio-service
        run: |
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5
          curl -s http://localhost:8000/health || curl -s http://localhost:8000/ || true
          pkill -f uvicorn || true

  build-and-push:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/newsify-audio-service
          tags: |
            type=ref,event=branch
            type=sha,format=short
            latest
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/audio-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/newsify-audio-service:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/newsify-audio-service:buildcache,mode=max