name: Backend Service CD

on:
  push:
    branches: [ main, dev, 'quan/feature/be/cd' ]

  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: 'backend/pnpm-lock.yaml'
      
      - name: Install dependencies
        working-directory: ./backend
        run: pnpm install
      
      - name: Build application
        working-directory: ./backend
        run: pnpm build
    
  docker-build-and-push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Generate Docker tags
        id: meta
        run: |
          # Get short commit SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          
          # Initialize tags array
          TAGS=""
          
          # Configure tags based on branch
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            TAGS="${{ secrets.DOCKERHUB_USERNAME }}/newsify-backend:latest"
          elif [[ $GITHUB_REF == refs/heads/dev ]]; then
            TAGS="${{ secrets.DOCKERHUB_USERNAME }}/newsify-backend:dev-${SHORT_SHA}"
          else
            # For other branches (like quan/feature/be/cd), use branch name and SHA
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SAFE_BRANCH_NAME=$(echo $BRANCH_NAME | sed 's/\//-/g')
            TAGS="${{ secrets.DOCKERHUB_USERNAME }}/newsify-backend:${SAFE_BRANCH_NAME}-${SHORT_SHA}"
          fi
          
          # Set output for build step
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/newsify-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/newsify-backend:buildcache,mode=max